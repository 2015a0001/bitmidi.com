/**
 * Single-purpose classes
 */

.code-font, .CodeMirror, .hljs code {
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
}

.shadow-6 {
  box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.2);
}

.grow-subtle {
  -moz-osx-font-smoothing: grayscale;
  backface-visibility: hidden;
  transform: translateZ(0);
  transition: transform 0.25s ease-out;
}

.grow-subtle:hover {
  transform: scale(1.02);
}

.grow-subtle:focus {
  transform: scale(1.05);
}

/**
 * Tachyons tweaks
 */

.link:focus {
  outline: none;
}

/**
 * Highlight.js tweaks
 */

.hljs-built_in,
.hljs-builtin-name {
  color: #66d9ef;
}

/**
 * CodeMirror tweaks
 */

.CodeMirror {
  font-size: 15px;
  border-radius: .25rem;
  border: .125rem #272822 solid; /* codemirror monokai background color */
  height: auto;

  /* grow */
  -moz-osx-font-smoothing: grayscale;
  backface-visibility: hidden;
  transform: translateZ(0);
  transition: transform 0.25s ease-out;
}

.CodeMirror:hover {
  /* grow */
  transform: scale(1.02);
}

.CodeMirror-focused {
  border-color: #357edd; /* tachyons: blue */
  box-shadow: 2px 2px 8px 0px rgba(0, 0, 0, 0.2); /* tachyons: shadow-4 */

  /* grow */
  transform: scale(1.05) !important;
}

.CodeMirror-matchingbracket {
  text-decoration: none !important; /* disable default style */
  border-bottom: rgba(255, 255, 255, .5) 1px solid;
}

.CodeMirror-placeholder {
  color: #75715e !important; /* codemirror monokai comment color */
}

.CodeMirror-scroll {
  margin-bottom: -18px; /* default: -30px */
  margin-right: -18px; /* default: -30px */
  margin-top: 12px; /* default: 0 */
  margin-left: 12px; /* default: 0 */
  min-height: 130px;
}

pre.hljs {
  margin: 0; /* disable browser default style */
  padding: 1em; /* increase paddding */
  white-space: pre-wrap; /* wrap long lines */
}

.CodeMirror, .hljs, .hljs code {
  font-size: 14px;
}

/**
 * Animations (adapted from animate.css)
 */

.animate-fade-in {
  animation-fill-mode: both;
}

.animate--normal {
  animation-duration: 0.5s;
}

.animate--fast {
  animation-duration: 0.25s;
}

.animate--delay {
  animation-delay: 1s;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

.animate-fade-in {
  animation-name: fadeIn;
}
